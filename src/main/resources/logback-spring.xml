<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- springProfile 태그로 복수 개의 logback 파일을 설정할 수 있다. -->
    <springProfile name="local">
        <property resource="logback-local.yml"/>
    </springProfile>
    <springProfile name="dev">
        <property resource="logback-dev.yml"/>
    </springProfile>

    <!-- pattern -->
    <property name="LOG_PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{36} - %msg%n"/>

<!--  appender class 종류  -->
<!--ch.qos.logback.core.ConsoleAppender-->
<!--ch.qos.logback.core.FileAppender-->
<!--ch.qos.logback.core.rolling.RollingFileAppender-->
<!--ch.qos.logback.classic.net.SMTPAppender-->
<!--ch.qos.logback.classic.db.DBAppender-->

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${LOG_PATTERN}</Pattern>
        </layout>
    </appender>


    <!-- File Appender -->
    <!-- INFO 인 경우 파일에 로그 처리 -->
    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 파일 경로 설정 -->
<!--        <file>./logs/local/local_log_%d{yyyy-MM-dd}-%i.log</file>-->

        <!-- 출력 패턴 설정-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>

        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그 파일 압축 -->
            <fileNamePattern>./logs/local/info_log_%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 파일당 최고 용량 kb, mb, gb -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 일자별 로그 파일 최대 보관 주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>

        </filter>

    </appender>

    <!-- WARN 인 경우 파일에 로그 처리 -->
    <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 파일 경로 설정 -->
        <!-- <file>./logs/local/warn_log_%d{yyyy-MM-dd}-%i.log</file> -->

        <!-- 출력 패턴 설정-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>

        <!-- 에러의 경우 파일에 로그 처리 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./logs/local/warn_log_%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 파일당 최고 용량 kb, mb, gb -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 일자별 로그 파일 최대 보관 주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- root레벨 설정 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="WARN_LOG" />
        <appender-ref ref="INFO_LOG" />
    </root>

    <!-- 특정패키지 로깅레벨 설정 -->
    <logger name="com.ono.omg.controller" additivity="false">
        <level value = "DEBUG" />
        <appender-ref ref="INFO_LOG" />
<!--        <appender-ref ref="WARN_LOG" />-->
    </logger>

    <logger name="org.hibernate.SQL" additivity="false">
        <level value = "DEBUG" />
        <appender-ref ref="INFO_LOG" />
    </logger>

</configuration>