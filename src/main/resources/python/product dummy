from faker import Faker
from sqlalchemy import create_engine
import sqlalchemy as db
import random
from random import randint
import pandas as pd

fake = Faker('ko_KR') # locale 정보 설정
Faker.seed() # 초기 seed 설정

# ======= Reference =======
# https://velog.io/@seanlee/이커머스-더미데이터-생성
# https://www.daleseo.com/python-faker/

# name : 이름 (문자)
# phone : 휴대전화 (문자, 010-****-**** 형식)
# user_status : 유저상태 (문자, ['active', 'inactive', 'dormancy'])
# user_class : 유저등급 (문자, ['일반','Family', 'VIP', 'VVIP'])
# email : 이메일 주소 (문자)
# marketing_agree : 마케팅 수신동의 (참거짓)
# social_login : 소셜 로그인 (문자, ['google','facebook','kakao','naver'])
# last_logged_at : 마지막 접속일 (날짜)
# created_at : 생성일 및 가입일 (날짜)
# address: 주소

photo = ["https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon01.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon02.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon03.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon04.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon05.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon06.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon07.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon08.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon09.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon10.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon11.png",
"https://jaesa-bucket.s3.ap-northeast-2.amazonaws.com/SpartaIcon12.png"
        ]

categorys = ['패션의류/잡화',
             '뷰티',
             '식품',
             '주방용품',
             '스포츠/레저',
             '도서/음반',
             '가전디지털']

# dummy data count
repeat_count = 50000

title = [fake.bs() for i in range(repeat_count)]
price = [(randint(1000, 100000)%1000)*100 for i in range(repeat_count)]
category = [random.choice(categorys) for i in range(repeat_count)]
delivery = [random.choice(['일반 배송', '고속 배송', '초고속 배송']) for i in range(repeat_count)]
stock = [randint(10, 5000) for i in range(repeat_count)]
sellerId = [randint(1, 10000) for i in range(repeat_count)]
isDeleted = 'N'
imgUrl = [random.choice(photo) for i in range(repeat_count)]
created_at = [fake.date_between(start_date = '-1y', end_date ='today') for i in range(repeat_count)]
modified_at =[fake.date_between(start_date = '-1y', end_date ='today') for i in range(repeat_count)]

df = pd.DataFrame()
df['title'] = title
df['price'] = price
df['category'] = category
df['delivery'] = delivery
df['stock'] = stock
df['seller'] = sellerId
df['is_deleted'] = isDeleted
df['img_url'] = imgUrl
df['created_at'] = created_at
df['modified_at'] = modified_at


# print(df)

# pandas to dict == to json
# ex) {"name": "name", ...}
records = df.to_dict(orient='records')
# print(records)

# <...> 부분은 본인 DB 정보
engine = create_engine("mysql+mysqldb://root:1234@127.0.0.1:3306/melocal?charset=utf8mb4")

with engine.connect() as conn:
    metadata = db.MetaData()
# <table>에는 데이터 형식에 맞게 테이블이 생성되어 있어야 됨 (본인 테이블명 기입)
    table = db.Table('product', metadata, autoload=True, autoload_with=engine)

    query = db.insert(table).values(records)
    result_proxy = conn.execute(query)
    print("=========")